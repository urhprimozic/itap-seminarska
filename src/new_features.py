# tukaj bom naredil par novih spremenljivk iz spektralnih kanalov in pol delal feature removal na njih
# best ranks: [ 4,  3,  0,  2,  1,  7, 10,  8, 11, 13,  6,  9,  5, 12, 14])
# average ranks: [ 1,  2,  3,  0,  4, 10,  5,  8,  6,  9,  7, 11, 14, 13, 12]
from tqdm import tqdm
import numpy as np
from random import randint


def monte_carlo_shiti_method(features, probabilities, n_iter=50, depth=5):
    '''
    Implements state-of-art method for creating new feature combinations. Very complex and abstract. 


    '''
    new_features = set((f,) for f in features)
    # en feature je oblike a*/b*/c*/d, kjer so a,b,c,d featurji in */ predstavlja krat ali deljenje.
    # To zakodiram v tuple (a,b,c,d), kjer predszank določa, al mamo množenje (+) al i deljenje(-)
    for iteration in tqdm(range(n_iter), total=n_iter):
        f_len = randint(1, depth)
        f = []
        for j in range(f_len):
            sign = np.random.choice([1, -1])
            feature = np.random.choice(features, p=probabilities)
            if (- sign * feature) in f:
                sign *= 1
            f.append(sign * feature)
        f.sort()
        f = tuple(f)
        # if f in new_features:
        #   continue #zakaj je to kle sj mam set
        new_features.add(f)
    return new_features


if __name__ == "__main__":
    # features = [168, 166, 167, 61, 71, 31, 106, 172, 91, 64, 86, 62, 0, 3, 1, 151, 33, 153, 121, 108, 85, 46, 70, 32, 107, 63, 76, 158, 41, 173, 92, 2, 156, 11, 136, 123, 75, 30, 176, 79, 77, 175, 10, 90, 60, 105, 13, 169, 178, 9, 78, 161, 34, 157, 160, 171, 4, 120, 155, 40, 122, 152, 48, 116, 133, 143, 154, 109, 150, 163, 114, 138, 159, 94, 177, 26, 141, 115, 137, 47, 101, 93, 162, 140, 100, 142, 124, 73, 12, 84, 170, 99, 174, 165, 8, 110,
    #           82, 144, 45, 95, 125, 6, 127, 5, 80, 128, 139, 135, 25, 65, 132, 35, 7, 118, 49, 39, 67, 126, 148, 58, 96, 66, 98, 55, 69, 36, 113, 81, 68, 38, 56, 111, 83, 131, 97, 88, 129, 43, 24, 23, 145, 37, 164, 72, 146, 112, 74, 22, 103, 21, 42, 130, 147, 20, 54, 117, 19, 179, 53, 29, 57, 89, 51, 14, 44, 87, 119, 18, 52, 102, 134, 50, 149, 15, 17, 104, 27, 16, 59, 28]  # averaged = [ 0,  1,  9,  5, 10,  8,  6,  4,  3, 11,  2,  7, 13, 14, 12]
    #p = np.array([i ^ 4 for i in range(len(features))])
    p = [0.033444044316363435,
         0.018163096654110155,
         0.043921713316596195,
         0.023206700236438244,
         0.025237343296672914,
         0.030386822611236028,
         0.03374873590695291,
         0.03767278480346856,
         0.03369122823822032,
         0.0366288884255419,
         0.03167572853718947,
         0.03243399199481154,
         0.04662438826723827,
         0.024283081494825862,
         0.02164950916224576]
    p = np.array([i**2 for i in p])
    p = p/np.sum(p)
    features = [i for i in range(15)]
    new_features = monte_carlo_shiti_method(
        features, probabilities=p, n_iter=100)

# >>> new_features
#[(-7, 7, 10, 12), (-12, -7, 0, 8), (-11, -2, 2, 8), (3, 13), (-2, 0, 7, 12), (0, 14), (-8,), (7, 10), (-12, -7, -5, 14), (13,), (-2, 7, 10, 12), (-13, -12, -10, -2, 10), (-11, -8, 5), (-13, -12, 12, 12), (-11, -9, 9), (-12, -10, -7, 7, 11), (6,), (-10, -2, 0, 2), (-13, -11, -6, 0, 7), (-12, -10, -2, 2, 7), (-8, 5), (-6, -5, -3, 2, 11), (-2, 2), (7, 14), (8,), (-8, -2), (-3, 12), (-9, -8, -7, -1, 5), (1,), (10,), (-10, -2, 2, 3, 4), (-9, -6, -2), (-9, 2, 5, 9), (-5, -4, 1), (-12, -4), (3,), (-11, -1, 2, 9), (12,), (-4, 7, 9, 10, 12), (-13, 0, 8), (-11, -8, 2, 14), (-12, -7, 10, 10), (-13, -11, 0, 7, 9), (0, 2, 14), (-10, -9, -7, 12, 13), (-4,), (5,), (-5, 3, 8), (-13, 5), (14,), (-11, -10, -9), (-11, -11, 0, 12, 12), (-10, -7, -7, 2, 10), (-14, -5, -5, 3), (-2, 0, 7, 9), (-12, -9), (-11, 0, 7, 9, 12), (-14, -13, -11, 1, 12), (-2,), (7,), (-10, -8, -2, 7), (-2, 12, 12), (-10, -6, -6, -5, 11), (-9, -8, -2), (-6, -2, 0, 4), (-9,), (-10, 2, 5, 7), (0,), (9,), (-11, -7, 3), (-12, -11, -5, -1, 5), (-7, 0), (-6, -2, 9), (-11, -6, 2, 12), (5, 7, 10), (-10, -8, 8, 11, 12), (2,), (11,), (-10, 2, 7, 10, 11), (8, 12), (9, 11), (-7, 2), (-14,), (-14, -12, -11, -2, 0), (-4, 13), (4,), (-10, -9, 2, 6), (-10, 6), (-5, 2), (2, 7), (-10, -1, 12), (-12,), (-3,), (-11, 0), (-2, 12), (-12, -3, 12), (-13, 2, 6, 7, 9), (-12, -11, -2, -2, 11), (-7, 6, 8), (-7, 7, 7), (7, 8), (0, 2, 11)]
